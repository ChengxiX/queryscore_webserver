#lang racket
(require web-server/servlet
         web-server/servlet-env)
(require web-server/managers/none)
(require web-server/formlets)
(require web-server/http/basic-auth)
(require web-server/http/id-cookie)

(require "model.rkt")
(require "formlets.rkt")


(require crypto)
(require crypto/all)
(use-all-factories!)


(define (base title body)
  `(html (head (meta ((charset "UTF-8")))
               (title ,(string-append title " - RDFZ社联查分系统")))
         ,body))

(define (homepage request)
  (define (render-homepage embed/url)
    (response/xexpr (base "首页" `(body (h1 "首页") (p "欢迎使用RDFZ社联查分系统") (a ((href ,(embed/url login))) "登录")))))
  (send/suspend/dispatch render-homepage))

(define secret-salt (make-secret-salt/file (build-path PATH "secret-salt.bin")))

(define (login request)
  (define (login-handler request)
    (define-values (username password) (formlet-process login-form request))
    (match (cons username password)
      [(cons user pass) #:when (let ((realpass (user-password user))) (if realpass (pwhash-verify #f (string->bytes/utf-8 pass) realpass) #f))
                        (send/suspend/dispatch (lambda (embed/url) (response/xexpr `(html (head (meta ((http-equiv "refresh") (content ,(string-append "0;url=" (embed/url (if (member "admin" (user-club user)) admin query))))))))
                                                                                   #:cookies (list (make-id-cookie "identity" user #:key secret-salt #:max-age 86400)))))]
      [else (login (redirect/get))]))
  (let ((id (request-id-cookie request #:name "identity" #:key secret-salt #:shelf-life 86400)))
    (if id
        (if (member "admin" (user-club id)) (admin (redirect/get)) (query (redirect/get)))
        (send/suspend/dispatch (lambda (embed/url) (response/xexpr (base "登录" `(body (h1 "登录") (form ([action ,(embed/url login-handler)]) ,@(formlet-display login-form) (input ([type "submit"]))))))))
        )))

(define (admin request)
  (define (after-auth request next) (let ((id (request-id-cookie request #:name "identity" #:key secret-salt #:shelf-life 86400))) (if (if id (member "admin" (user-club id)) #f) (next request)
                                                                                                                                       (send/suspend/dispatch (lambda (embed/url) (response/xexpr (base "无权限" `(body (h1 "无权限") (p "您不是管理员") (a ((href ,(embed/url login))) "登录") (a ((href ,(embed/url homepage))) "首页")))))))))
  (define (render-admin embed/url)
    (response/xexpr (base "管理面板" `(body (h1 "管理面板")
                                        (h2 "用户")
                                        (form ([action ,(embed/url call-get-user)])
                                              ,@(formlet-display get-user) (input ([type "submit"])))
                                        (form ([action ,(embed/url call-add-user)])
                                              ,@(formlet-display add-user) (input ([type "submit"])))
                                        (form ([action ,(embed/url call-update-user)])
                                              ,@(formlet-display update-user) (input ([type "submit"])))
                                        (form ([action ,(embed/url call-delete-user)])
                                              ,@(formlet-display delete-user) (input ([type "submit"])))
                                        (form ([action ,(embed/url call-club-add-user)])
                                              ,@(formlet-display update-user-add-club) (input ([type "submit"])))
                                        (form ([action ,(embed/url call-club-rm-user)])
                                              ,@(formlet-display update-user-rm-club) (input ([type "submit"])))
                                        (h2 "社团")
                                        (form ([action ,(embed/url call-get-club)])
                                              ,@(formlet-display get-club) (input ([type "submit"])))
                                        (form ([action ,(embed/url call-add-club)])
                                              ,@(formlet-display add-club) (input ([type "submit"])))
                                        (form ([action ,(embed/url call-update-club)])
                                              ,@(formlet-display update-club) (input ([type "submit"])))
                                        (form ([action ,(embed/url call-delete-club)])
                                              ,@(formlet-display delete-club) (input ([type "submit"])))
                                        (h2 "积分")
                                        (form ([action ,(embed/url call-add-log)])
                                              ,@(formlet-display add-log) (input ([type "submit"])))
                                        (form ([action ,(embed/url add-log-change-call)])
                                              ,@(formlet-display add-log-change) (input ([type "submit"])))
                                        (form ([action ,(embed/url call-get-logs)])
                                              ,@(formlet-display get-logs) (input ([type "submit"])))
                                        ))))
  (define (call-get-user request)
    (after-auth request (lambda (request) (define-values (name club) (formlet-process get-user request))
                          (response/xexpr (base "查询用户结果" `(body (h1 "查询用户结果")
                                                                ,(let ((res (user-get name club))) (table-render (car res) (cdr res))
                                                                   )))))))
  (define (call-get-club request)
    (after-auth request (lambda (request) (response/xexpr (base "所有社团" `(body (h1 "所有社团")
                                                                              ,(let ((res (club-all))) (table-render (car res) (map number->string (cdr res))))
                                                                              ))))))
  (define (call-get-logs request)
    (after-auth request (lambda (request) (define-values (club) (formlet-process get-logs request))
                          (response/xexpr (base "查询积分记录结果" `(body (h1 "查询积分记录结果")
                                                                  ,(let ((res (log-*-byclub club))) (table-render-4 (first res) (second res) (map number->string (third res)) (fourth res)))))))))
  (define (call-add-user request)
    (after-auth request (lambda (request) (define-values (name password club) (formlet-process add-user request))
                          (unless (or (equal? name "") (equal? password "")) (user-insert! name (string-split club ",")) (pwhash 'scrypt (string->bytes/utf-8 password) `((ln , (inexact->exact (+ 1 (round (* (random) 10))))))))
                          (admin (redirect/get)))))
  (define (call-update-user request)
    (after-auth request (lambda (request) (define-values (name newname password) (formlet-process update-user request))
                          (if (equal? newname "") '() (user-rename! name newname))
                          (if (equal? password "") '() (user-repassword! name (pwhash 'scrypt (string->bytes/utf-8 password) `((ln , (inexact->exact (+ 1 (round (* (random) 10)))))))))
                          (admin (redirect/get)))))
  (define (call-club-add-user request)
    (after-auth request (lambda (request) (define-values (user club) (formlet-process update-user-add-club request))
                          (map (lambda (c) (user-add-club! user c)) (string-split club ","))
                          (admin (redirect/get)))))
  (define (call-club-rm-user request)
    (after-auth request (lambda (request) (define-values (user club) (formlet-process update-user-rm-club request))
                          (map (lambda (c) (user-rm-club! user c)) (string-split club ","))
                          (admin (redirect/get)))))
  (define (call-delete-user request)
    (after-auth request (lambda (request) (define-values (name) (formlet-process delete-user request))
                          (user-delete! name)
                          (admin (redirect/get)))))
  (define (call-add-club request)
    (after-auth request (lambda (request) (define-values (name score) (formlet-process add-club request))
                          (unless (equal? name "") (club-insert! name score))
                          (admin (redirect/get)))))
  (define (call-update-club request)
    (after-auth request (lambda (request) 
                          (define-values (name newname) (formlet-process update-club request))
                          (unless (or (equal? name "") (equal? newname "")) (club-rename! name newname))
                          (admin (redirect/get)))))
  (define (call-delete-club request)
    (after-auth request (lambda (request)
                          (define-values (name) (formlet-process delete-club request))
                          (unless (equal? name "") (club-delete! name))
                          (admin (redirect/get)))))
  (define (call-add-log request)
    (after-auth request (lambda (request) (define-values (name score comment) (formlet-process add-log request))
                          (log-insert! name comment score)
                          (admin (redirect/get)))))
  (define (add-log-change-call request)
    (after-auth request (lambda (request) (define-values (name score-change comment) (formlet-process add-log-change request))
                          (log-change! name comment score-change)
                          (admin (redirect/get)))))
  (send/suspend/dispatch render-admin))

(define (table-render cell1 cell2) `(table ((border="1")) ,@(map (lambda (a b) `(tr(td ,a) (td ,b))) cell1 cell2)))

(define (table-render-4 cell1 cell2 cell3 cell4) `(table ((border="1")) ,@(map (lambda (a b c d) `(tr(td ,a) (td ,b) (td ,c) (td ,d))) cell1 cell2 cell3 cell4)))

(define (query request)
  (define (render-query embed/url)
    (response/xexpr (base "社团详细" `(body (h1 "社团详细") ,@(map (lambda (club) `(div (h2 ,club) (p ,(string-append "当前积分:" (number->string (club-score club)))) ,(let ((res (log-*-byclub club))) (table-render-4 (first res) (second res) (map number->string (third res)) (fourth res))))) (user-club (request-id-cookie request #:name "identity" #:key secret-salt #:shelf-life 86400)) )))))
  (send/suspend/dispatch render-query))

;(user-insert! "minister" '("admin") (pwhash 'scrypt #"ADUzm$&Jh8jGJ77RU!" `((ln , (inexact->exact (+ 1 (round (* (random) 10))))))))
;run
(serve/servlet homepage #:command-line? #t #:servlet-path "/" #:port 8080 #:listen-ip #f)